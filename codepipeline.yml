AWSTemplateFormatVersion: 2010-09-09

Description: 'AWS Codepipeline onelogin-sync'

Parameters:
  Environment:
    AllowedValues:
    - dev
    - stg
    - prod
    Description: 'Environment'
    Type: 'String'
    Default: 'prod'

  CodePipelineBucketPrefix:
    Description: CodePipeline needs a utility bucket for its internal use. Specify a unique prefix for the bucket name
    Type: String
    Default: onelogin-sync-codepipeline-

  GitHubRepository:
    Type: String
    Default: pbyweb/onelogin-sync/master  ## Change the branch accordengly
    Description:  owner/repository/branch

  GitHubOAuthToken:
    Type: String
    Default:  GitHub OAuthToken Here
    Description:  CodePipeline requires an OAuthToken

  AppStackName:
    Type: String
    Default: onelogin-sync-lambda
  Email:
    Type: String      
    Description: The email address where CodePipeline sends pipeline notifications
    Default: hemant.kumar@gslab.com    

Resources:
  CodePipelineSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: !Ref Email
          Protocol: EMAIL          
  CodeBuildRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName:
        'Fn::Join': [ "", ["CodeBuildRole", "-", !Ref 'AWS::StackName', "-", !Ref 'Environment']]
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: "Allow"
          Principal:
            Service: "codebuild.amazonaws.com"
          Action: "sts:AssumeRole"

  CodePipelineRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName:
        'Fn::Join': [ "", ["CodePipelineRole", "-", !Ref 'AWS::StackName', "-", !Ref 'Environment']]
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: "Allow"
          Principal:
            Service: "codepipeline.amazonaws.com"
          Action: "sts:AssumeRole"

  # This can be restricted more
  CodeBuildPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName:
        'Fn::Join': [ "", ["CodeBuildPolicy", "-", !Ref 'AWS::StackName', "-", !Ref 'Environment']]
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - logs:DescribeLogGroups
            - logs:FilterLogEvents
            - logs:DescribeLogStreams
            - logs:DeleteLogGroup
            - s3:putObject
            - s3:getObject
            - codebuild:*
            - sns:*  
            - 'cloudformation:List*'
            - 'cloudformation:Get*'
            - 'cloudformation:PreviewStackUpdate'
            - 'cloudformation:ValidateTemplate'
            - 'cloudformation:CreateStack'
            - 'cloudformation:CreateUploadBucket'
            - 'cloudformation:DeleteStack'
            - 'cloudformation:Describe*'
            - 'cloudformation:UpdateStack'
            - 'lambda:Get*'
            - 'lambda:List*'
            - 'lambda:CreateFunction'
            - 'lambda:AddPermission'
            - 'lambda:CreateAlias'
            - 'lambda:DeleteFunction'
            - 'lambda:InvokeFunction'
            - 'lambda:PublishVersion'
            - 'lambda:RemovePermission'
            - 'lambda:Update*'
            - 'apigateway:GET'
            - 'apigateway:POST'
            - 'apigateway:PUT'
            - 'apigateway:DELETE'
            - 's3:CreateBucket'
            - 's3:DeleteBucket'
            - 's3:ListBucket'
            - 's3:ListBucketVersions'
            - 's3:PutObject'
            - 's3:GetObject'
            - 's3:DeleteObject'
            - 'iam:PassRole'
            - 'kinesis:*'
            - 'iam:GetRole'
            - 'iam:CreateRole'
            - 'iam:PutRolePolicy'
            - 'iam:DeleteRolePolicy'
            - 'iam:DeleteRole'
            - 'cloudwatch:GetMetricStatistics'
            - 'events:Put*'
            - 'events:Remove*'
            - 'events:Delete*'
            - 'dynamodb:*'
          Resource: "*"
      Roles:
        -  !Ref CodeBuildRole

  CodePipelinePolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName:
        'Fn::Join': [ "", ["CodePipelinePolicy", "-", !Ref 'AWS::StackName', "-", !Ref 'Environment']]
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - s3:putObject
            - s3:getObject
            - codebuild:*
            - sns:*  
          Resource:
            - "*"
      Roles:
        -  !Ref CodePipelineRole

  S3:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Join [ "", [!Ref CodePipelineBucketPrefix, !Ref 'Environment', "-", !Ref "AWS::Region"]]

  BuildStage:
    Type: "AWS::CodeBuild::Project"
    Properties:
      Name: onelogin-sync-build
      Description: Demo of CodeBuild with CodeDeploy pipeline.
      ServiceRole: !Ref CodeBuildRole
      TimeoutInMinutes: 5
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.yml 
      Environment:
        Type: "LINUX_CONTAINER"
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0
      Artifacts:
        Type: CODEPIPELINE

  BuildDeploy:
    Type: "AWS::CodeBuild::Project"
    Properties:
      Name: onelogin-sync-deploy
      Description: Demo of CodeBuild with CodeDeploy pipeline.
      ServiceRole: !Ref CodeBuildRole
      TimeoutInMinutes: 5
      Source:
        Type: CODEPIPELINE
        BuildSpec: codedeploy.yml
      Environment:
        Type: "LINUX_CONTAINER"
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0
        EnvironmentVariables:
          - Name: env
            Type: PLAINTEXT
            Value: !Ref Environment
      Artifacts:
        Type: CODEPIPELINE

  # CodePipeline with its stages:
  Pipeline:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      Name: !Join [ "", ["DevOps-Pipeline", "-", !Ref 'AWS::StackName'] ]
      ArtifactStore:
        Location: !Ref S3
        Type: S3
      RestartExecutionOnUpdate: true
      RoleArn: !Join [ "", ["arn:aws:iam::", !Ref "AWS::AccountId", ":role/", !Ref CodePipelineRole  ] ]
      Stages:

        # Stage 1:  Get the source from GitHub:
        - Name: Source
          Actions:
            - Name: SourceAction
              RunOrder: 1
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              Configuration:
                Owner: !Select [0, !Split [ "/" , !Ref GitHubRepository ]]
                Repo: !Select [1, !Split [ "/" , !Ref GitHubRepository ]]
                Branch: !Select [2, !Split [ "/" , !Ref GitHubRepository ]]
                PollForSourceChanges: true
                OAuthToken: !Ref GitHubOAuthToken
              OutputArtifacts:
                - Name: TheSource

        # Stage 2:  Build using Serverless Framework
        - Name: BuildStage
          Actions:
            - Name: onelogin-sync-build
              RunOrder: 1
              InputArtifacts:
                - Name: TheSource
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName:  !Ref BuildStage
              OutputArtifacts:
                - Name: TheArtifact
            - Name: ApproveBuildForProduction
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: '1'
              Configuration:
                NotificationArn: !Ref CodePipelineSNSTopic
                CustomData: !Sub 'Do you want to create a change set against the production codepipeline stack?'
              RunOrder: '2'

        # Stage 3:  Build and Deploy using Serverless Framework
        - Name: BuildDeploy
          Actions:
            - Name: onelogin-sync-deploy
              RunOrder: 1
              InputArtifacts:
                - Name: TheArtifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName:  !Ref BuildDeploy
              OutputArtifacts:
                - Name: TheArtifact2

Outputs:
  CodeBuild:
    Value: !Ref Pipeline
  Environment:
    Value: !Ref Environment
  Github:
    Value: !Ref GitHubRepository
  CodeBuildRole:
    Value: !Ref CodeBuildRole
  CodeBuildPolicy:
    Value: !Ref CodeBuildPolicy
  CodePipelineRole:
    Value: !Ref CodePipelineRole
  CodePipelinePolicy:
    Value: !Ref CodePipelinePolicy
  S3:
    Value: !Ref S3
